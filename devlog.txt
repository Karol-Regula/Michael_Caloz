ENTRY FORMAT:
firstL -- TIMESTAMP
<CHANGES>

karolR -- 2017-05-08 12:01 
- initial commit, started devlog, added .gitignore

bayleSS -- 2017-05-11 12:01 
- added sql database

emmaV -- 2017-05-13 13:28 
- added basic account login/register functionality

karolR -- 2017-05-14 16:04 
- added database access functions
- added basic app.py functionality
- added test template for displaying data

yvonneC -- 2017-05-15 12:01 
- added functions to print subjects
- added functions to print subtopics

yvonneC -- 2017-05-15 15:31 
- added subtopic method for specific subject
- reorganization of code to fit style guide

emmaV -- 2017-05-15 18:34 
- add basic index.html with jinja dropdown
- topic dropdowns change based on type selection
- started subtopic dropdown changing based on topic

karolR -- 2017-05-15 20:44 
- fixed bug with database breaking when accessing subtopics
- subtopics now work for notes

karolR -- 2017-05-16 11:46 
- removed duplicate topic entries
- cleaned up terminology (subject vs topic vs subtopic)

emmaV -- 2017-05-16 12:23 
- changed html and js to start reflecing new format

yvonneC & bayleSS -- 2017-05-16 12:25 
- finished method that takes (subject, type, topic) and returns the information related to those categories (topic is empty string for every type except notes)

karolR -- 2017-05-16 12:29 
- wrote method for getting subjects and translating the subjects from the notes table

yvonneC -- 2017-05-16 21:48 
- minor changes to database.py to ensure style is same
- integrated access tracking in app.py by creating a session variable

emmaV & felixRB -- 2017-05-17 12:22 
- refigure how dropdown info loads to be more efficient
- finish so that subj/type/topic dropdowns flow well

yvonneC & bayleSS -- 2017-05-17 12:30
- fixed getTopicNotes(subject) method
- created subjectTopic method that returns dictionary of subjects with list of topics as values

emmaV -- 2017-05-17 13:09
- begin getting content based on subject/type/topic

emmaV & bayleSS -- 2017-05-17 13:49
- fix getting content from db (table typos, wrong sqlite3 fxns)
- plan better content return type

bayleSS -- 2017-05-17 15:22
- database.py sends content to client side successfully

karolR -- 2017-05-19 11:36
- worked on making topics drop down-invisible when not needed (still not perfect) 

yvonneC -- 2017-05-21 18:39
- utilized json.dumps() to make the information sent from backend to frontend easier to parse

emmaV -- 2017-05-21 19:44
- parsed json dump sent from backend
- added display code for notes and questions (on frontend)
- displayed as rows in table
- answers for questions are color coded, change color when clicked

karolR -- 2017-05-21 21:02
- started work on database de-duplication function
- excluded questions with no answers from being sent to frontend
- used Emma's display code to display definitions, hidden by default, visible when word is clicked

felixRB -- 2017-05-21 22:00
- introduced Bootstrap framework, thereby simplifying and improving the presentation and apperance of the site

karolR -- 2017-05-22 13:05
- finished database de-duplication function, de-duplicated database
- added copy of original not de-duplicated database

bayleSS -- 2017-05-22 20:20
- made database to tally clicks
- made function to tally clicks (accessed through app.py)

emmaV -- 2017-05-22 21:00
- debug tally clicks table functionality

karolR -- 2017-05-24 11:44
- wrote backend functions for returning quizzes
- returnQuizAmount(subject) returns amount of quizzes available per subject
- returnQuiz(quizNumber, subject) returns data for requested quizNumber for a particular subject

yvonneC & bayleSS -- 2017-05-24 12:30
- added accessDB.py and began writing basic functions for retrieving data
  - plan to use information to construct graph for admin
- added basic routes for app.py regarding admin accounts

yvonneC -- 2017-05-24 13:45
- continued integrating admin account login
- continued working on getInfo() function to retrieve data for access tracking

bayleSS -- 2017-05-24 21:19
- finished work started in class tallying click frequencies by subject
- getInfo() function returns dictionary with subjects and their click frequencies

karolR -- 2017-05-25 10:33
- added two app.py ajax routes for returning quiz amount per subject and quiz data

emmaV -- 2017-05-25 12:12
- different quizzes now displayed on the page
- start changing formatting for quiz questions

yvonneC -- 2017-05-25 2:53
- initialized the admin account with default password
- wrote methods to retrieve default password in database and real password in database
- also wrote backend method to change passwords in Accounts database
